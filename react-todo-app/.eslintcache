[{"C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\index.jsx":"1","C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDo.jsx":"2","C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDoItem.jsx":"3","C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDoForm.jsx":"4"},{"size":662,"mtime":1609180391177,"results":"5","hashOfConfig":"6"},{"size":2617,"mtime":1609180706198,"results":"7","hashOfConfig":"6"},{"size":801,"mtime":1609180567225,"results":"8","hashOfConfig":"6"},{"size":541,"mtime":1609180523991,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11lr0kp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\index.jsx",[],["20","21"],"C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDo.jsx",["22"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'antd';\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n \r\nconst token = '49f1c206e4f9a9987f5ea6307ab437113eaa99ff';\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` }\r\n};\r\n\r\nexport const ToDo = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    useEffect(async () => {\r\n    const result = await axios.get(\r\n      `https://api.todoist.com/rest/v1/tasks`,\r\n      config\r\n    );\r\n\r\n        setTodos(result.data);\r\n    }, []);\r\n\r\n    const onCheck = (id) => {\r\n      const index = todos.findIndex(todo => todo.id === id);\r\n  \r\n      if (index !== -1) {\r\n        const todo = todos[index];\r\n  \r\n        todo.checked = !todo.checked;\r\n  \r\n        axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks/${id}/close`,\r\n          todo,\r\n          config\r\n        );\r\n  \r\n        todos.splice(index, 1, todo);\r\n        setTodos([...todos]);\r\n      }\r\n    }\r\n\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n    \r\n        if (index !== -1) {\r\n          axios.delete(\r\n            `https://api.todoist.com/rest/v1/tasks/${id}`,\r\n            config\r\n          );\r\n          todos.splice(index, 1);\r\n          setTodos([...todos]);\r\n        }\r\n      }\r\n\r\n    const onChange = async (id) => {\r\n      const index = todos.findIndex(todo => todo.id === id);\r\n        \r\n      if (index !== -1) {\r\n        const todo = todos[index];\r\n          \r\n        await axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks/${id}`,\r\n          todo,\r\n          config\r\n        );\r\n        \r\n        todos.splice(index, 1, todo);\r\n        setTodos([...todos]);\r\n      }\r\n    }\r\n\r\n    const onSubmit = async (content) => {\r\n        const todo = { content };\r\n    \r\n        const { data } = await axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks`,\r\n          todo,\r\n          config\r\n        );\r\n    \r\n        setTodos([...todos, {...todo, id: data.id}]);\r\n      }\r\n\r\n    const renderItems = (todos) => {\r\n        return (\r\n            <ul className='todo-list'>\r\n                { todos.map(todo => {\r\n                    return (\r\n                        <ToDoItem item={todo} onCheck={onCheck} onRemove={onRemove} onChange={onChange} />\r\n                    )\r\n                }) }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card title={'My todo list'}>\r\n            <ToDoForm onSubmit={onSubmit}/>\r\n            {\r\n                renderItems(todos)\r\n            }\r\n        </Card>\r\n    )\r\n} ","C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDoItem.jsx",[],"C:\\Users\\Martha\\OneDrive\\Desktop\\extra\\MARK\\react-todo-app\\src\\components\\ToDoForm.jsx",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":14,"column":15,"nodeType":"29","endLine":21,"endColumn":6},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]